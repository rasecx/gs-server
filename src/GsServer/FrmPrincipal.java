package GsServer;

import Tables.TorrentFileTableModel;
import Tables.TorrentTableModel;
import Threads.ThreadBuscaLegendaTorrents;
import Threads.ThreadEnviaNotificaoAndroid;
import Threads.ThreadGarbageCollector;
import Threads.ThreadIniciaCapturaTeclado;
import Utorrent.RequestUtorrent;
import Utorrent.Torrent;
import Utorrent.TorrentFile;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTable;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.plaf.metal.OceanTheme;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jcferreira
 */
public class FrmPrincipal extends javax.swing.JFrame {

    List<TorrentFile> arquivos = new ArrayList<>();
    List<List<TorrentFile>> listaDeArquivos = new ArrayList<>();
    List<Torrent> lista = new ArrayList<>();
    TorrentFileTableModel tbArquivosModel = new TorrentFileTableModel();
    TorrentTableModel tbModel = new TorrentTableModel();
    int selRow = 0;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popUpLog = new javax.swing.JPopupMenu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnTorrents = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbArquivos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnBaixarDoArquivo = new javax.swing.JButton();
        btnBaixarPendentes = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        pnLog = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPanel = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTorrents = new javax.swing.JTable();
        pnConfig = new javax.swing.JPanel();
        pnOpcoesBusca = new javax.swing.JPanel();
        edtIntervalo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbxLingua = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnServidorTorrent = new javax.swing.JPanel();
        edtIpUtorrent = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        edtPortaUtorrent = new javax.swing.JTextField();
        edtUsuarioUtorrent = new javax.swing.JTextField();
        edtSenhaUtorrent = new javax.swing.JPasswordField();
        pnGetSeries = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        edtPortaGetSeries = new javax.swing.JTextField();
        txtIPServidorGetSeries = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtIntervaloNotificacao = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        chkAvisoTorrentConcluido = new javax.swing.JCheckBox();
        btnSalvaConfigs = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        chkHabilitaAtalho = new javax.swing.JCheckBox();
        rdHabilitaArquivo = new javax.swing.JRadioButton();
        rdHabilitaDiretorio = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArquivo = new javax.swing.JMenu();
        mnuSair = new javax.swing.JMenuItem();
        mnuSobre = new javax.swing.JMenu();
        mnuServidorLegenda = new javax.swing.JMenu();
        mnuSubDb = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnuOpenSubTitles = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        popUpLog.getAccessibleContext().setAccessibleParent(txtPanel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GsServer");
        setBackground(new java.awt.Color(0, 0, 0));
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        tbArquivos.setAutoCreateRowSorter(true);
        tbArquivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patch", "Tamanho", "Done", "Priority"
            }
        ));
        tbArquivos.setShowHorizontalLines(false);
        tbArquivos.setShowVerticalLines(false);
        tbArquivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbArquivosMouseClicked(evt);
            }
        });
        tbArquivos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbArquivosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbArquivos);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnBaixarDoArquivo.setIcon(new javax.swing.ImageIcon("D:\\Julio\\Uteis\\GsServer\\GsServer\\icons\\srt.png")); // NOI18N
        btnBaixarDoArquivo.setToolTipText("Selecionar arquivo");
        btnBaixarDoArquivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBaixarDoArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarDoArquivoActionPerformed(evt);
            }
        });

        btnBaixarPendentes.setIcon(new javax.swing.ImageIcon("D:\\Julio\\Uteis\\GsServer\\GsServer\\icons\\download-icon.png")); // NOI18N
        btnBaixarPendentes.setToolTipText("Buscar legenda dos torrents finalizados");
        btnBaixarPendentes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBaixarPendentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarPendentesActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnBaixarDoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaixarPendentes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(btnBaixarDoArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
            .addComponent(btnBaixarPendentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator2)
        );

        pnLog.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        txtPanel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtPanel.setComponentPopupMenu(popUpLog);
        jScrollPane4.setViewportView(txtPanel);

        javax.swing.GroupLayout pnLogLayout = new javax.swing.GroupLayout(pnLog);
        pnLog.setLayout(pnLogLayout);
        pnLogLayout.setHorizontalGroup(
            pnLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        pnLogLayout.setVerticalGroup(
            pnLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tbTorrents.setBackground(new java.awt.Color(204, 255, 204));
        tbTorrents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbTorrents.setFocusable(false);
        tbTorrents.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tbTorrents.setSelectionForeground(new java.awt.Color(255, 153, 0));
        tbTorrents.setShowHorizontalLines(false);
        tbTorrents.setShowVerticalLines(false);
        tbTorrents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTorrentsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTorrents);

        javax.swing.GroupLayout pnTorrentsLayout = new javax.swing.GroupLayout(pnTorrents);
        pnTorrents.setLayout(pnTorrentsLayout);
        pnTorrentsLayout.setHorizontalGroup(
            pnTorrentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTorrentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTorrentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(pnLog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnTorrentsLayout.setVerticalGroup(
            pnTorrentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTorrentsLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Torrents", pnTorrents);

        pnOpcoesBusca.setBorder(javax.swing.BorderFactory.createTitledBorder("Opçoes de Busca"));

        edtIntervalo.setText("30");
        edtIntervalo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edtIntervaloKeyTyped(evt);
            }
        });

        jLabel1.setText("Procurar legenda a cada ");

        cbxLingua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLinguaActionPerformed(evt);
            }
        });

        jLabel2.setText("Lingua:");

        jLabel3.setText("Minuto(s)");

        javax.swing.GroupLayout pnOpcoesBuscaLayout = new javax.swing.GroupLayout(pnOpcoesBusca);
        pnOpcoesBusca.setLayout(pnOpcoesBuscaLayout);
        pnOpcoesBuscaLayout.setHorizontalGroup(
            pnOpcoesBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnOpcoesBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnOpcoesBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnOpcoesBuscaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(pnOpcoesBuscaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(cbxLingua, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        pnOpcoesBuscaLayout.setVerticalGroup(
            pnOpcoesBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnOpcoesBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnOpcoesBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxLingua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnOpcoesBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnServidorTorrent.setBorder(javax.swing.BorderFactory.createTitledBorder("Servidor uTorrent"));

        edtIpUtorrent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtIpUtorrentFocusLost(evt);
            }
        });
        edtIpUtorrent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edtIpUtorrentKeyTyped(evt);
            }
        });

        jLabel4.setText("IP:");

        jLabel5.setText("Porta:");

        jLabel6.setText("Usuario:");

        jLabel7.setText("Senha:");

        edtPortaUtorrent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edtPortaUtorrentKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnServidorTorrentLayout = new javax.swing.GroupLayout(pnServidorTorrent);
        pnServidorTorrent.setLayout(pnServidorTorrentLayout);
        pnServidorTorrentLayout.setHorizontalGroup(
            pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnServidorTorrentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edtIpUtorrent, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(edtPortaUtorrent))
                .addGap(18, 18, 18)
                .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edtUsuarioUtorrent)
                    .addComponent(edtSenhaUtorrent, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnServidorTorrentLayout.setVerticalGroup(
            pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnServidorTorrentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnServidorTorrentLayout.createSequentialGroup()
                        .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(edtUsuarioUtorrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(edtSenhaUtorrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnServidorTorrentLayout.createSequentialGroup()
                        .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(edtIpUtorrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnServidorTorrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(edtPortaUtorrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnGetSeries.setBorder(javax.swing.BorderFactory.createTitledBorder("GetSeries - Android"));

        jLabel8.setText("Porta:");

        jLabel9.setText("Meu Ip:");

        edtPortaGetSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edtPortaGetSeriesKeyTyped(evt);
            }
        });

        txtIPServidorGetSeries.setEditable(false);
        txtIPServidorGetSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPServidorGetSeriesActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Intervalo de Notificação"));

        jLabel10.setText("a cada");

        txtIntervaloNotificacao.setText("24");
        txtIntervaloNotificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIntervaloNotificacaoActionPerformed(evt);
            }
        });

        jLabel11.setText("Horas");

        chkAvisoTorrentConcluido.setText("Habilitar Notificação");
        chkAvisoTorrentConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvisoTorrentConcluidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIntervaloNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11))
                    .addComponent(chkAvisoTorrentConcluido))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(chkAvisoTorrentConcluido)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtIntervaloNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnGetSeriesLayout = new javax.swing.GroupLayout(pnGetSeries);
        pnGetSeries.setLayout(pnGetSeriesLayout);
        pnGetSeriesLayout.setHorizontalGroup(
            pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGetSeriesLayout.createSequentialGroup()
                .addGroup(pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIPServidorGetSeries)
                    .addComponent(edtPortaGetSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnGetSeriesLayout.setVerticalGroup(
            pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGetSeriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(edtPortaGetSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnGetSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtIPServidorGetSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnSalvaConfigs.setText("Salvar");
        btnSalvaConfigs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvaConfigsActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Atalhos para Download"));

        chkHabilitaAtalho.setSelected(true);
        chkHabilitaAtalho.setText("Habilitar CTRL+C");
        chkHabilitaAtalho.setToolTipText("Se habilitado basta selecionar o arquivo de video e pressionar CTRL+C para iniciar o download da legenda");

        rdHabilitaArquivo.setText("Habilitar somente para arquivos");
        rdHabilitaArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdHabilitaArquivoActionPerformed(evt);
            }
        });

        rdHabilitaDiretorio.setText("Habilitar para arquivos e Diretórios");
        rdHabilitaDiretorio.setActionCommand("Habilitar para arquivos e diretórios");
        rdHabilitaDiretorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdHabilitaDiretorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkHabilitaAtalho)
                    .addComponent(rdHabilitaArquivo)
                    .addComponent(rdHabilitaDiretorio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(chkHabilitaAtalho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdHabilitaArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdHabilitaDiretorio))
        );

        chkHabilitaAtalho.getAccessibleContext().setAccessibleName("chkHabilitaCTRL");
        chkHabilitaAtalho.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout pnConfigLayout = new javax.swing.GroupLayout(pnConfig);
        pnConfig.setLayout(pnConfigLayout);
        pnConfigLayout.setHorizontalGroup(
            pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfigLayout.createSequentialGroup()
                .addGroup(pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnConfigLayout.createSequentialGroup()
                            .addGroup(pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pnOpcoesBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pnGetSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnServidorTorrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnSalvaConfigs, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnConfigLayout.setVerticalGroup(
            pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnConfigLayout.createSequentialGroup()
                        .addComponent(pnOpcoesBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnGetSeries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(pnServidorTorrent, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvaConfigs, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configurações", pnConfig);

        mnuArquivo.setText("Arquivo");

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        mnuArquivo.add(mnuSair);

        jMenuBar1.add(mnuArquivo);

        mnuSobre.setText("Sobre");

        mnuServidorLegenda.setText("Sevirdores de Legenda");

        mnuSubDb.setText("SubDb");
        mnuServidorLegenda.add(mnuSubDb);
        mnuServidorLegenda.add(jSeparator4);

        mnuOpenSubTitles.setText("OpenSubtitles");
        mnuServidorLegenda.add(mnuOpenSubTitles);

        mnuSobre.add(mnuServidorLegenda);
        mnuSobre.add(jSeparator5);

        jMenuItem5.setText("Doação");
        mnuSobre.add(jMenuItem5);

        jMenuBar1.add(mnuSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleParent(this);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Utils.carregaConfiguracoes();
        new Thread(new Runnable() {
            @Override
            public void run() {
                Utils.ControleThread("IniciaProcesso");
                iniciaProcesso();
            }
        }).start();
       
       
    }//GEN-LAST:event_formWindowOpened

    public void iniciaProcesso() {
        Utils.limpaLog();
        PreencheTabelaTorrents();
        while (true) {
            if (LogError.connectionRefused) {
                break;
            }

            if (!edtIpUtorrent.getText().equals("")) {
                PreencheTabelaTorrents();
                try {
                    Thread.sleep(1000 * 2);//*(3600/2));//30 minutos?
                } catch (InterruptedException ex) {
                    Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    Utils.escreveLog("Erro Fatal: " + ex.getMessage(), Mensagens.ERROR);
                }

            }
        }

    }
    private void cbxLinguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLinguaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxLinguaActionPerformed

    private void btnSalvaConfigsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvaConfigsActionPerformed
        // TODO add your handling code here:
        try {
            String dir = new File(".").getCanonicalPath();
            File file = new File(dir + "\\configs.properties");
            Properties p = new Properties();
            p.setProperty("IntervaloBusca", edtIntervalo.getText());
            p.setProperty("linguaLegenda", String.valueOf(cbxLingua.getSelectedIndex()));
            p.setProperty("PortaUtorrent", edtPortaUtorrent.getText());
            p.setProperty("ServerUtorrent", edtIpUtorrent.getText());
            p.setProperty("UsuarioUtorrent", edtUsuarioUtorrent.getText());
            p.setProperty("SenhaUtorrent", String.valueOf(edtSenhaUtorrent.getPassword()));
            p.setProperty("PortaGetSeries", edtPortaGetSeries.getText());
            p.setProperty("AvisaConclusao", Boolean.toString(chkAvisoTorrentConcluido.isSelected()));
            p.setProperty("HabilitaAtalho", Boolean.toString(chkHabilitaAtalho.isSelected()));
            p.setProperty("HabilitaArquivoPasta", Boolean.toString(rdHabilitaDiretorio.isSelected()));
            p.setProperty("IpGsCliente", txtIPServidorGetSeries.getText());
            p.setProperty("NotificaoEnviada", "Nao");
            p.setProperty("IntervaloNotificacao", txtIntervaloNotificacao.getText());

            FileOutputStream fos = new FileOutputStream(file);

            p.store(fos, "");

            fos.flush();
            fos.close();
            
            iniciaProcesso();

        } catch (IOException e) {
            e.printStackTrace();
            Utils.escreveLog("Erro Fatal: " + e.getMessage(), Mensagens.ERROR);
        }


    }//GEN-LAST:event_btnSalvaConfigsActionPerformed

    private void txtIPServidorGetSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPServidorGetSeriesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtIPServidorGetSeriesActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_formWindowStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new SysTray().showTryIcon();
    }//GEN-LAST:event_formWindowClosing

    private void rdHabilitaArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdHabilitaArquivoActionPerformed
        // TODO add your handling code here:
        if (rdHabilitaArquivo.isSelected()) {
            rdHabilitaDiretorio.setSelected(false);
        } else {
            rdHabilitaDiretorio.setSelected(true);
        }
    }//GEN-LAST:event_rdHabilitaArquivoActionPerformed

    private void rdHabilitaDiretorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdHabilitaDiretorioActionPerformed
        // TODO add your handling code here:
        if (rdHabilitaDiretorio.isSelected()) {
            rdHabilitaArquivo.setSelected(false);
        } else {
            rdHabilitaArquivo.setSelected(true);
        }
    }//GEN-LAST:event_rdHabilitaDiretorioActionPerformed

    private void tbTorrentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTorrentsMouseClicked
        numLinhaTorrentSelecionado = tbTorrents.getSelectedRow();
        tbArquivosModel.limpar();
        tbArquivosModel.addListaDeTorrentFile(listaDeArquivos.get(tbTorrents.getSelectedRow()));
        tbArquivos.setModel(tbArquivosModel);
        numLinhaArquivoSelecionado = -1;

    }//GEN-LAST:event_tbTorrentsMouseClicked

    private void btnBaixarPendentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarPendentesActionPerformed
        Utils.limpaLog();
        Utils.escreveLog("Buscando legendas pendentes", Mensagens.INFO);
        btnBaixarPendentes.setEnabled(false);
        new ThreadBuscaLegendaTorrents().start();
    }//GEN-LAST:event_btnBaixarPendentesActionPerformed

    private void btnBaixarDoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarDoArquivoActionPerformed
        // TODO add your handling code here:
        new AbrirArquivo("Download");
    }//GEN-LAST:event_btnBaixarDoArquivoActionPerformed

    private void tbArquivosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbArquivosKeyPressed
        // TODO add your handling code here:
        //        if (evt.getKeyCode() == 10) {
        //
        //
        //        }
    }//GEN-LAST:event_tbArquivosKeyPressed

    private void edtPortaGetSeriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtPortaGetSeriesKeyTyped
        // TODO add your handling code here:
        Utils.soNumero(evt);
    }//GEN-LAST:event_edtPortaGetSeriesKeyTyped

    private void edtIpUtorrentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtIpUtorrentKeyTyped
        // TODO add your handling code here:
        //Utils.soNumero(evt);
    }//GEN-LAST:event_edtIpUtorrentKeyTyped

    private void edtIpUtorrentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtIpUtorrentFocusLost
        // TODO add your handling code here:
        if (!edtIpUtorrent.getText().equals("")) {
            if (!Utils.verificarIPValido(edtIpUtorrent.getText())) {
                JOptionPane.showMessageDialog(null, "O endereço ip digita é invalido", "Verificaçao", JOptionPane.WARNING_MESSAGE);
                edtIpUtorrent.grabFocus();
            }
        }

    }//GEN-LAST:event_edtIpUtorrentFocusLost

    private void edtIntervaloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtIntervaloKeyTyped
        // TODO add your handling code here:
        Utils.soNumero(evt);
    }//GEN-LAST:event_edtIntervaloKeyTyped

    private void edtPortaUtorrentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtPortaUtorrentKeyTyped
        // TODO add your handling code here:
        Utils.soNumero(evt);
    }//GEN-LAST:event_edtPortaUtorrentKeyTyped

    private void tbArquivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbArquivosMouseClicked
        // TODO add your handling code here:
        numLinhaArquivoSelecionado = tbArquivos.getSelectedRow();
    }//GEN-LAST:event_tbArquivosMouseClicked

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuSairActionPerformed

    private void txtIntervaloNotificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIntervaloNotificacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIntervaloNotificacaoActionPerformed

    private void chkAvisoTorrentConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvisoTorrentConcluidoActionPerformed
        // TODO add your handling code here:
        if(chkHabilitaAtalho.isEnabled())
            new ThreadEnviaNotificaoAndroid().start();
    }//GEN-LAST:event_chkAvisoTorrentConcluidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //Utils.escreviArquivoLog("Iniciando Sistema");

        Utils.verificaVersao();

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    MetalLookAndFeel.setCurrentTheme(new OceanTheme());
                    //WindowsLookAndFeel.
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Utils.escreviArquivoLog(
                    "Erro:" + ex.getMessage());
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Utils.escreviArquivoLog(
                    "Erro:" + ex.getMessage());
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Utils.escreviArquivoLog(
                    "Erro:" + ex.getMessage());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Utils.escreviArquivoLog(
                    "Erro:" + ex.getMessage());
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //Utils.escreviArquivoLog("Thread is Run");
                frm = new FrmPrincipal();
                frm.setVisible(true);
                Utils.populaComboLingua();

                GsSocketServer.startServer();

                txtPanel.setText(Utils.getDataHora());
                frm.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
                try {
                    dir = new File(".").getCanonicalPath();

                } catch (IOException ex) {
                    Logger.getLogger(FrmPrincipal.class
                            .getName()).log(Level.SEVERE, null, ex);
                    Utils.escreveLog(
                            "Erro Fatal: " + ex.getMessage(), Mensagens.ERROR);
                    // Utils.escreviArquivoLog("Erro:"+ex.getMessage());
                }
                String urlImg = dir + "\\icons\\ic_launcher32x32.png";

                Image image = Toolkit.getDefaultToolkit().getImage(urlImg);
                frm.setIconImage(image);
                
                btnBaixarDoArquivo.setIcon(new javax.swing.ImageIcon(dir + "\\icons\\srt.png"));
                btnBaixarPendentes.setIcon(new javax.swing.ImageIcon(dir + "\\icons\\download-icon.png"));

                new ThreadIniciaCapturaTeclado().start();
                 if (!edtIpUtorrent.getText().equals(""))
                    new ThreadBuscaLegendaTorrents().start();
        
                new ThreadGarbageCollector().start();
                
                if (chkAvisoTorrentConcluido.isSelected()) {
                    new ThreadEnviaNotificaoAndroid().start();
                }   

            }
        });

    }

    private void PreencheTabelaTorrents() {

        try {
            RequestUtorrent utorrent = new RequestUtorrent();
            lista = utorrent.listTorrent();

//            try {
//                new ThreadExecutaConexaoUtorrent().start();
//                Thread.sleep(1000);
//            } catch (InterruptedException ex) {
//                Logger.getLogger(ThreadExecutaConexaoUtorrent.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            lista = ThreadExecutaConexaoUtorrent.listaTorrent;
            if (lista.size() > 0) {
                if (tbModel.getRowCount() != lista.size()) {//regarrega
                    tbModel.limpar();
                    tbModel.addListaDeTorrent(lista);
                    if (lista.size() > tbModel.getRowCount())//adiciou torrent novo
                    {
                        Utils.setNotificaoEnviada(Mensagens.NOTIFICAO_NAO_ENVIADA);
                    }
                } else {//atualiza
                    for (int i = 0; i < lista.size(); i++) {
                        Torrent t = lista.get(i);
                        tbTorrents.setValueAt(t.getName(), i, tbTorrents.getColumn("Nome").getModelIndex());
                        tbTorrents.setValueAt(t.getStatus(), i, tbTorrents.getColumn("Status").getModelIndex());
                        tbTorrents.setValueAt(t.getProgress(), i, tbTorrents.getColumn("Progresso").getModelIndex());
                        tbTorrents.setValueAt(t, i, tbTorrents.getColumn("Legenda").getModelIndex());

                    }

                }
//                tbModel.fireTableDataChanged();               
                tbTorrents.setModel(tbModel);
                tbTorrents.getColumn("Nome").setMinWidth(250);

                ProgressCellRender pb = new ProgressCellRender();
                pb.setStringPainted(true);

                tbTorrents.getColumn("Progresso").setCellRenderer(pb);

                tbTorrents
                        .setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                            @Override
                            public Component getTableCellRendererComponent(JTable table, Object value,
                                    boolean isSelected, boolean hasFocus, int row, int column) {

                                super.getTableCellRendererComponent(table, value, isSelected,
                                        hasFocus, row, column);

                                if (value == "Concluido") {
                                    if (isSelected) {
                                        setForeground(new Color(255, 153, 0));
                                    } else {
                                        setForeground(new Color(0, 100, 50));
                                    }

                                } else {
                                    if (isSelected) {
                                        setForeground(new Color(255, 153, 0));
                                    } else {
                                        setForeground(Color.BLACK);
                                    }
                                }
                                return this;
                            }
                        }
                        );

                for (Torrent t : lista) {
                    arquivos = utorrent.getFilesInTorrent(t);
                    listaDeArquivos.add(arquivos);

                }
//                listaDeArquivos.addAll(ThreadExecutaConexaoUtorrent.listaDeArquivos);
                try {
                    tbArquivosModel.limpar();
                    List<TorrentFile> lf = listaDeArquivos.get(numLinhaTorrentSelecionado);
                    tbArquivosModel.addListaDeTorrentFile(lf);
                    tbTorrents.setRowSelectionInterval(numLinhaTorrentSelecionado, numLinhaTorrentSelecionado);
                    tbArquivos.setRowSelectionInterval(numLinhaArquivoSelecionado, numLinhaArquivoSelecionado);
                    tbArquivos.setModel(tbArquivosModel);

                } catch (Exception e) {
                    //tbArquivosModel.limpar();
                    tbTorrents.setRowSelectionInterval(numLinhaTorrentSelecionado, numLinhaTorrentSelecionado);
                    tbArquivos.setRowSelectionInterval(numLinhaArquivoSelecionado, numLinhaArquivoSelecionado);

                }

            }
        } catch (Exception e) {
            if (!e.getMessage().contains("Row index out of range")) {
                Utils.escreveLog(FrmPrincipal.class
                        .getName() + " Erro Fatal: " + e.getMessage(), Mensagens.ERROR);
            }

        }

    }

    public class ProgressCellRender extends JProgressBar implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            String progress = "";
            setMaximum(1000);

            try {
                NumberFormat numero = NumberFormat.getPercentInstance();
                numero.setMaximumFractionDigits(2);
                numero.setMaximumIntegerDigits(3);
                progress = numero.format(Double.parseDouble(String
                        .valueOf(value)) / 1000);

                // if (value instanceof Float) {
                setString(progress);
                progress = String.valueOf(value); //Math.round(((Float) value) * 100f);
                // } else if (value instanceof Integer) {
                // progress = (int) value;
                // }
                setValue(Integer.valueOf(progress));

            } catch (Exception e) {
                setValue(0);
            }

            return this;
        }
    }

    public static FrmPrincipal frm;
    private static String dir = "";
    public static JFrame frameHint = new JFrame("Downloads");
    public static String LINGUA = "pt";
    private int numLinhaTorrentSelecionado = -1;
    private int numLinhaArquivoSelecionado = -1;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnBaixarDoArquivo;
    public static javax.swing.JButton btnBaixarPendentes;
    private javax.swing.JButton btnSalvaConfigs;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JComboBox cbxLingua;
    public static javax.swing.JCheckBox chkAvisoTorrentConcluido;
    public static javax.swing.JCheckBox chkHabilitaAtalho;
    public static javax.swing.JTextField edtIntervalo;
    public static javax.swing.JTextField edtIpUtorrent;
    public static javax.swing.JTextField edtPortaGetSeries;
    public static javax.swing.JTextField edtPortaUtorrent;
    public static javax.swing.JPasswordField edtSenhaUtorrent;
    public static javax.swing.JTextField edtUsuarioUtorrent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenu mnuArquivo;
    private javax.swing.JMenuItem mnuOpenSubTitles;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JMenu mnuServidorLegenda;
    private javax.swing.JMenu mnuSobre;
    private javax.swing.JMenuItem mnuSubDb;
    private javax.swing.JPanel pnConfig;
    private javax.swing.JPanel pnGetSeries;
    private javax.swing.JPanel pnLog;
    private javax.swing.JPanel pnOpcoesBusca;
    private javax.swing.JPanel pnServidorTorrent;
    private javax.swing.JPanel pnTorrents;
    private javax.swing.JPopupMenu popUpLog;
    public static javax.swing.JRadioButton rdHabilitaArquivo;
    public static javax.swing.JRadioButton rdHabilitaDiretorio;
    private javax.swing.JTable tbArquivos;
    private javax.swing.JTable tbTorrents;
    public static javax.swing.JTextField txtIPServidorGetSeries;
    public static javax.swing.JTextField txtIntervaloNotificacao;
    public static javax.swing.JTextPane txtPanel;
    // End of variables declaration//GEN-END:variables
}
